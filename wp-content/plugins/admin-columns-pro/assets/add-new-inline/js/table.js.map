{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///../admin-columns/src/js/helpers/admin-columns.ts","webpack:///../admin-columns/src/js/modules/ac-services.ts","webpack:///../admin-columns/src/node_modules/nanoassert/index.js","webpack:///../admin-columns/src/node_modules/nanobus/index.js","webpack:///../admin-columns/src/node_modules/nanoscheduler/index.js","webpack:///../admin-columns/src/node_modules/nanotiming/browser.js","webpack:///../admin-columns/src/node_modules/remove-array-items/index.js","webpack:///./add-new-inline/js/modules/add-new-inline.ts","webpack:///./add-new-inline/js/modules/create-button.ts","webpack:///./add-new-inline/js/modules/screen-option.ts","webpack:///./add-new-inline/js/table.ts","webpack:///./node_modules/nanoassert/index.js","webpack:///./node_modules/nanobus/index.js","webpack:///./node_modules/nanoscheduler/index.js","webpack:///./node_modules/nanotiming/browser.js","webpack:///./node_modules/remove-array-items/index.js"],"names":[],"mappings":";QAAA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;;QAEA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;;;QAGA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA,0CAA0C,gCAAgC;QAC1E;QACA;;QAEA;QACA;QACA;QACA,wDAAwD,kBAAkB;QAC1E;QACA,iDAAiD,cAAc;QAC/D;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA,yCAAyC,iCAAiC;QAC1E,gHAAgH,mBAAmB,EAAE;QACrI;QACA;;QAEA;QACA;QACA;QACA,2BAA2B,0BAA0B,EAAE;QACvD,iCAAiC,eAAe;QAChD;QACA;QACA;;QAEA;QACA,sDAAsD,+DAA+D;;QAErH;QACA;;;QAGA;QACA;;;;;;;;;;;;;AClFA;AAAA;AAAA;AAAgD;AACzC;AACP;AACA,iCAAiC,4DAAU;AAC3C;AACA;AACA;;;;;;;;;;;;;ACNA;AAAA;AAAA;AAA8B;AAC9B;AACA;AACA;AACA,0BAA0B,8CAAO;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACc,yEAAU,EAAC;;;;;;;;;;;;ACxB1B;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA,sBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACjBA,aAAa,mBAAO,CAAC,yFAAoB;AACzC,iBAAiB,mBAAO,CAAC,2EAAY;AACrC,aAAa,mBAAO,CAAC,qEAAQ;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C,SAAS;AACpuBAAuB,aAAa;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,YAAY;AAC/B;AACA;AACA;AACA;;;;;;;;;;;;ACpJA,aAAa,mBAAO,CAAC,qEAAQ;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;;;;;;;;;;;ACjDA,gBAAgB,mBAAO,CAAC,+EAAe;AACvC,aAAa,mBAAO,CAAC,qEAAQ;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;;;;;;;;;;;;;AC5Ca;AACb;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,SAAS;AAC/B;AACA;AACA;AACA;;;;;;;;;;;;;ACpBA;AAAA;AAAA;AAAA;AAA2C;AACA;AACe;AAC1D,iBAAiB,+EAAc;AAC/B;AACA;AACA;AACA,gCAAgC,sDAAY;AAC5C;AACA;AACA;AACA,oCAAoC,sDAAY;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,SAAS;AACT;AACA;AACA,CAAC;AACc,2EAAY,EAAC;;;;;;;;;;;;;AC5D5B;AAAA;AAAA;AAA8B;AAC9B;AACA;AACA;AACA;AACA,0BAA0B,8CAAO;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACc,2EAAY,EAAC;;;;;;;;;;;;;ACvD5B;AAAA;AAAA;AAA8B;AAC9B;AACA;AACA;AACA;AACA,0BAA0B,8CAAO;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,CAAC;AACc,2EAAY,EAAC;;;;;;;;;;;;;AC3C5B;AAAA;AAAA;AAAoD;AACM;AAC1D,iBAAiB,+EAAc;AAC/B;AACA,mDAAmD,+DAAY;AAC/D,CAAC;;;;;;;;;;;;ACLD;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA,sBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACjBA,aAAa,mBAAO,CAAC,sEAAoB;AACzC,iBAAiB,mBAAO,CAAC,wDAAY;AACrC,aAAa,mBAAO,CAAC,kDAAQ;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C,SAAS;AACpuBAAuB,aAAa;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,YAAY;AAC/B;AACA;AACA;AACA;;;;;;;;;;;;ACpJA,aAAa,mBAAO,CAAC,kDAAQ;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;;;;;;;;;;;ACjDA,gBAAgB,mBAAO,CAAC,4DAAe;AACvC,aAAa,mBAAO,CAAC,kDAAQ;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;;;;;;;;;;;;;AC5Ca;AACb;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,SAAS;AAC/B;AACA;AACA;AACA","file":"table.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./add-new-inline/js/table.ts\");\n","import AcServices from \"../modules/ac-services\";\nexport var initAcServices = function () {\n    if (!window.AC_SERVICES) {\n        window.AC_SERVICES = new AcServices();\n    }\n    return window.AC_SERVICES;\n};\n","import Nanobus from \"nanobus\";\nvar AcServices = /** @class */ (function () {\n    function AcServices() {\n        this.services = {};\n        this.events = new Nanobus();\n    }\n    AcServices.prototype.registerService = function (name, service) {\n        this.services[name] = service;\n        return this;\n    };\n    AcServices.prototype.getService = function (name) {\n        return this.hasService(name) ? this.services[name] : null;\n    };\n    AcServices.prototype.hasService = function (name) {\n        return this.services.hasOwnProperty(name);\n    };\n    AcServices.prototype.addListener = function (name, callback) {\n        this.events.addListener(name, callback);\n    };\n    AcServices.prototype.emitEvent = function (name, args) {\n        this.events.emit(name, args);\n    };\n    return AcServices;\n}());\nexport default AcServices;\n","assert.notEqual = notEqual;\nassert.notOk = notOk;\nassert.equal = equal;\nassert.ok = assert;\nmodule.exports = assert;\nfunction equal(a, b, m) {\n    assert(a == b, m); // eslint-disable-line eqeqeq\n}\nfunction notEqual(a, b, m) {\n    assert(a != b, m); // eslint-disable-line eqeqeq\n}\nfunction notOk(t, m) {\n    assert(!t, m);\n}\nfunction assert(t, m) {\n    if (!t)\n        throw new Error(m || 'AssertionError');\n}\n","var splice = require('remove-array-items');\nvar nanotiming = require('nanotiming');\nvar assert = require('assert');\nmodule.exports = Nanobus;\nfunction Nanobus(name) {\n    if (!(this instanceof Nanobus))\n        return new Nanobus(name);\n    this._name = name || 'nanobus';\n    this._starListeners = [];\n    this._listeners = {};\n}\nNanobus.prototype.emit = function (eventName) {\n    assert.ok(typeof eventName === 'string' || typeof eventName === 'symbol', 'nanobus.emit: eventName should be type string or symbol');\n    var data = [];\n    for (var i = 1, len = arguments.length; i < len; i++) {\n        data.push(arguments[i]);\n    }\n    var emitTiming = nanotiming(this._name + \"('\" + eventName.toString() + \"')\");\n    var listeners = this._listeners[eventName];\n    if (listeners && listeners.length > 0) {\n        this._emit(this._listeners[eventName], data);\n    }\n    if (this._starListeners.length > 0) {\n        this._emit(this._starListeners, eventName, data, emitTiming.uuid);\n    }\n    emitTiming();\n    return this;\n};\nNanobus.prototype.on = Nanobus.prototype.addListener = function (eventName, listener) {\n    assert.ok(typeof eventName === 'string' || typeof eventName === 'symbol', 'nanobus.on: eventName should be type string or symbol');\n    assert.equal(typeof listener, 'function', 'nanobus.on: listener should be type function');\n    if (eventName === '*') {\n        this._starListeners.push(listener);\n    }\n    else {\n        if (!this._listeners[eventName])\n            this._listeners[eventName] = [];\n        this._listeners[eventName].push(listener);\n    }\n    return this;\n};\nNanobus.prototype.prependListener = function (eventName, listener) {\n    assert.ok(typeof eventName === 'string' || typeof eventName === 'symbol', 'nanobus.prependListener: eventName should be type string or symbol');\n    assert.equal(typeof listener, 'function', 'nanobus.prependListener: listener should be type function');\n    if (eventName === '*') {\n        this._starListeners.unshift(listener);\n    }\n    else {\n        if (!this._listeners[eventName])\n            this._listeners[eventName] = [];\n        this._listeners[eventName].unshift(listener);\n    }\n    return this;\n};\nNanobus.prototype.once = function (eventName, listener) {\n    assert.ok(typeof eventName === 'string' || typeof eventName === 'symbol', 'nanobus.once: eventName should be type string or symbol');\n    assert.equal(typeof listener, 'function', 'nanobus.once: listener should be type function');\n    var self = this;\n    this.on(eventName, once);\n    function once() {\n        listener.apply(self, arguments);\n        self.removeListener(eventName, once);\n    }\n    return this;\n};\nNanobus.prototype.prependOnceListener = function (eventName, listener) {\n    assert.ok(typeof eventName === 'string' || typeof eventName === 'symbol', 'nanobus.prependOnceListener: eventName should be type string or symbol');\n    assert.equal(typeof listener, 'function', 'nanobus.prependOnceListener: listener should be type function');\n    var self = this;\n    this.prependListener(eventName, once);\n    function once() {\n        listener.apply(self, arguments);\n        self.removeListener(eventName, once);\n    }\n    return this;\n};\nNanobus.prototype.removeListener = function (eventName, listener) {\n    assert.ok(typeof eventName === 'string' || typeof eventName === 'symbol', 'nanobus.removeListener: eventName should be type string or symbol');\n    assert.equal(typeof listener, 'function', 'nanobus.removeListener: listener should be type function');\n    if (eventName === '*') {\n        this._starListeners = this._starListeners.slice();\n        return remove(this._starListeners, listener);\n    }\n    else {\n        if (typeof this._listeners[eventName] !== 'undefined') {\n            this._listeners[eventName] = this._listeners[eventName].slice();\n        }\n        return remove(this._listeners[eventName], listener);\n    }\n    function remove(arr, listener) {\n        if (!arr)\n            return;\n        var index = arr.indexOf(listener);\n        if (index !== -1) {\n            splice(arr, index, 1);\n            return true;\n        }\n    }\n};\nNanobus.prototype.removeAllListeners = function (eventName) {\n    if (eventName) {\n        if (eventName === '*') {\n            this._starListeners = [];\n        }\n        else {\n            this._listeners[eventName] = [];\n        }\n    }\n    else {\n        this._starListeners = [];\n        this._listeners = {};\n    }\n    return this;\n};\nNanobus.prototype.listeners = function (eventName) {\n    var listeners = eventName !== '*'\n        ? this._listeners[eventName]\n        : this._starListeners;\n    var ret = [];\n    if (listeners) {\n        var ilength = listeners.length;\n        for (var i = 0; i < ilength; i++)\n            ret.push(listeners[i]);\n    }\n    return ret;\n};\nNanobus.prototype._emit = function (arr, eventName, data, uuid) {\n    if (typeof arr === 'undefined')\n        return;\n    if (arr.length === 0)\n        return;\n    if (data === undefined) {\n        data = eventName;\n        eventName = null;\n    }\n    if (eventName) {\n        if (uuid !== undefined) {\n            data = [eventName].concat(data, uuid);\n        }\n        else {\n            data = [eventName].concat(data);\n        }\n    }\n    var length = arr.length;\n    for (var i = 0; i < length; i++) {\n        var listener = arr[i];\n        listener.apply(listener, data);\n    }\n};\n","var assert = require('assert');\nvar hasWindow = typeof window !== 'undefined';\nfunction createScheduler() {\n    var scheduler;\n    if (hasWindow) {\n        if (!window._nanoScheduler)\n            window._nanoScheduler = new NanoScheduler(true);\n        scheduler = window._nanoScheduler;\n    }\n    else {\n        scheduler = new NanoScheduler();\n    }\n    return scheduler;\n}\nfunction NanoScheduler(hasWindow) {\n    this.hasWindow = hasWindow;\n    this.hasIdle = this.hasWindow && window.requestIdleCallback;\n    this.method = this.hasIdle ? window.requestIdleCallback.bind(window) : this.setTimeout;\n    this.scheduled = false;\n    this.queue = [];\n}\nNanoScheduler.prototype.push = function (cb) {\n    assert.equal(typeof cb, 'function', 'nanoscheduler.push: cb should be type function');\n    this.queue.push(cb);\n    this.schedule();\n};\nNanoScheduler.prototype.schedule = function () {\n    if (this.scheduled)\n        return;\n    this.scheduled = true;\n    var self = this;\n    this.method(function (idleDeadline) {\n        var cb;\n        while (self.queue.length && idleDeadline.timeRemaining() > 0) {\n            cb = self.queue.shift();\n            cb(idleDeadline);\n        }\n        self.scheduled = false;\n        if (self.queue.length)\n            self.schedule();\n    });\n};\nNanoScheduler.prototype.setTimeout = function (cb) {\n    setTimeout(cb, 0, {\n        timeRemaining: function () {\n            return 1;\n        }\n    });\n};\nmodule.exports = createScheduler;\n","var scheduler = require('nanoscheduler')();\nvar assert = require('assert');\nvar perf;\nnanotiming.disabled = true;\ntry {\n    perf = window.performance;\n    nanotiming.disabled = window.localStorage.DISABLE_NANOTIMING === 'true' || !perf.mark;\n}\ncatch (e) { }\nmodule.exports = nanotiming;\nfunction nanotiming(name) {\n    assert.equal(typeof name, 'string', 'nanotiming: name should be type string');\n    if (nanotiming.disabled)\n        return noop;\n    var uuid = (perf.now() * 10000).toFixed() % Number.MAX_SAFE_INTEGER;\n    var startName = 'start-' + uuid + '-' + name;\n    perf.mark(startName);\n    function end(cb) {\n        var endName = 'end-' + uuid + '-' + name;\n        perf.mark(endName);\n        scheduler.push(function () {\n            var err = null;\n            try {\n                var measureName = name + ' [' + uuid + ']';\n                perf.measure(measureName, startName, endName);\n                perf.clearMarks(startName);\n                perf.clearMarks(endName);\n            }\n            catch (e) {\n                err = e;\n            }\n            if (cb)\n                cb(err, name);\n        });\n    }\n    end.uuid = uuid;\n    return end;\n}\nfunction noop(cb) {\n    if (cb) {\n        scheduler.push(function () {\n            cb(new Error('nanotiming: performance API unavailable'));\n        });\n    }\n}\n","'use strict';\n/**\n * Remove a range of items from an array\n *\n * @function removeItems\n * @param {Array<*>} arr The target array\n * @param {number} startIdx The index to begin removing from (inclusive)\n * @param {number} removeCount How many items to remove\n */\nmodule.exports = function removeItems(arr, startIdx, removeCount) {\n    var i, length = arr.length;\n    if (startIdx >= length || removeCount === 0) {\n        return;\n    }\n    removeCount = (startIdx + removeCount > length ? length - startIdx : removeCount);\n    var len = length - removeCount;\n    for (i = startIdx; i < len; ++i) {\n        arr[i] = arr[i + removeCount];\n    }\n    arr.length = len;\n};\n","import ScreenOption from \"./screen-option\";\nimport CreateButton from \"./create-button\";\nimport { initAcServices } from \"AC/helpers/admin-columns\";\nvar AcServices = initAcServices();\nvar AddNewInline = /** @class */ (function () {\n    function AddNewInline() {\n        this.loading = false;\n        this.createButton = new CreateButton();\n        this.screenOption = null;\n        var screenOptionsElement = document.getElementById('acp_new_inline_show_button-1');\n        if (screenOptionsElement) {\n            this.screenOption = new ScreenOption(screenOptionsElement);\n        }\n        this.initEvents();\n    }\n    AddNewInline.prototype.initEvents = function () {\n        var _this = this;\n        if (this.screenOption && !this.screenOption.isEnabled()) {\n            this.createButton.disable();\n        }\n        if (this.screenOption) {\n            this.screenOption.events.addListener('changeState', function (state) {\n                state ? _this.createButton.enable() : _this.createButton.disable();\n            });\n        }\n        this.createButton.events.addListener('click', function () {\n            _this.addNew();\n        });\n    };\n    AddNewInline.prototype.addNew = function () {\n        var _this = this;\n        if (this.loading) {\n            return;\n        }\n        this.loading = true;\n        jQuery.post(window.location.href, {\n            ac_action: 'acp_add_new_inline',\n            _ajax_nonce: AC.ajax_nonce,\n            list_screen: AC.list_screen,\n            layout: AC.layout\n        }).done(function (response) {\n            if (response) {\n                if (response.success && response.data.hasOwnProperty('row')) {\n                    var $row = jQuery(response.data.row);\n                    jQuery('table.wp-list-table tbody').prepend($row);\n                    // Small animation to draw attention to new row\n                    $row.hide();\n                    $row.fadeIn();\n                    AcServices.getService('Table').updateRow($row[0]);\n                    if (AcServices.hasService('Editing') && AcServices.getService('Editing').InlineEdit) {\n                        AcServices.getService('Editing').InlineEdit.initRow(response.data.id);\n                    }\n                }\n            }\n        }).always(function () {\n            _this.loading = false;\n        });\n    };\n    return AddNewInline;\n}());\nexport default AddNewInline;\n","import Nanobus from \"nanobus\";\nvar CreateButton = /** @class */ (function () {\n    function CreateButton() {\n        this.element = this.createElement();\n        this.state = true;\n        this.events = new Nanobus();\n        this.placeElement();\n        this.initEvents();\n    }\n    CreateButton.prototype.placeElement = function () {\n        var _this = this;\n        var previousElement = document.querySelector('.page-title-action');\n        if (previousElement) {\n            setTimeout(function () {\n                previousElement.insertAdjacentElement('afterend', _this.element);\n            }, 200);\n        }\n    };\n    CreateButton.prototype.initEvents = function () {\n        var _this = this;\n        this.element.addEventListener('click', function (e) {\n            e.preventDefault();\n            if (_this.state) {\n                _this.events.emit('click');\n            }\n        });\n    };\n    CreateButton.prototype.getElement = function () {\n        return this.element;\n    };\n    CreateButton.prototype.hide = function () {\n        this.getElement().style.display = 'none';\n    };\n    CreateButton.prototype.show = function () {\n        this.getElement().style.display = 'inline-block';\n    };\n    CreateButton.prototype.enable = function () {\n        this.show();\n        this.state = true;\n    };\n    CreateButton.prototype.disable = function () {\n        this.hide();\n        this.state = false;\n    };\n    CreateButton.prototype.createElement = function () {\n        var element = document.createElement('a');\n        element.classList.add('ac-button');\n        element.classList.add('ac-add-new-inline');\n        element.classList.add('add-new-h2');\n        element.id = 'ac-button-add-new-inline';\n        element.innerText = ACP_ADD_NEW_INLINE.i18n.add_new;\n        return element;\n    };\n    return CreateButton;\n}());\nexport default CreateButton;\n","import Nanobus from \"nanobus\";\nvar ScreenOption = /** @class */ (function () {\n    function ScreenOption(element) {\n        this.element = element;\n        this.state = false;\n        this.events = new Nanobus();\n        this.init();\n    }\n    ScreenOption.prototype.init = function () {\n        var _this = this;\n        this.determinScreenOptionState();\n        this.element.addEventListener('click', function () {\n            _this.determinScreenOptionState();\n            _this.persist();\n        });\n    };\n    ScreenOption.prototype.isEnabled = function () {\n        return this.element.checked;\n    };\n    ScreenOption.prototype.determinScreenOptionState = function () {\n        this.isEnabled()\n            ? this.enable()\n            : this.disable();\n    };\n    ScreenOption.prototype.enable = function () {\n        this.state = true;\n        this.events.emit('changeState', true);\n    };\n    ScreenOption.prototype.disable = function () {\n        this.state = false;\n        this.events.emit('changeState', false);\n    };\n    ScreenOption.prototype.persist = function () {\n        jQuery.post(ajaxurl, {\n            action: 'acp_new_inline_show_button',\n            value: this.state,\n            layout: AC.layout,\n            list_screen: AC.list_screen,\n            _ajax_nonce: AC.ajax_nonce\n        });\n    };\n    return ScreenOption;\n}());\nexport default ScreenOption;\n","import AddNewInline from \"./modules/add-new-inline\";\nimport { initAcServices } from \"AC/helpers/admin-columns\";\nvar AcServices = initAcServices();\ndocument.addEventListener('DOMContentLoaded', function () {\n    AcServices.registerService('AddNewInline', new AddNewInline());\n});\n","assert.notEqual = notEqual;\nassert.notOk = notOk;\nassert.equal = equal;\nassert.ok = assert;\nmodule.exports = assert;\nfunction equal(a, b, m) {\n    assert(a == b, m); // eslint-disable-line eqeqeq\n}\nfunction notEqual(a, b, m) {\n    assert(a != b, m); // eslint-disable-line eqeqeq\n}\nfunction notOk(t, m) {\n    assert(!t, m);\n}\nfunction assert(t, m) {\n    if (!t)\n        throw new Error(m || 'AssertionError');\n}\n","var splice = require('remove-array-items');\nvar nanotiming = require('nanotiming');\nvar assert = require('assert');\nmodule.exports = Nanobus;\nfunction Nanobus(name) {\n    if (!(this instanceof Nanobus))\n        return new Nanobus(name);\n    this._name = name || 'nanobus';\n    this._starListeners = [];\n    this._listeners = {};\n}\nNanobus.prototype.emit = function (eventName) {\n    assert.ok(typeof eventName === 'string' || typeof eventName === 'symbol', 'nanobus.emit: eventName should be type string or symbol');\n    var data = [];\n    for (var i = 1, len = arguments.length; i < len; i++) {\n        data.push(arguments[i]);\n    }\n    var emitTiming = nanotiming(this._name + \"('\" + eventName.toString() + \"')\");\n    var listeners = this._listeners[eventName];\n    if (listeners && listeners.length > 0) {\n        this._emit(this._listeners[eventName], data);\n    }\n    if (this._starListeners.length > 0) {\n        this._emit(this._starListeners, eventName, data, emitTiming.uuid);\n    }\n    emitTiming();\n    return this;\n};\nNanobus.prototype.on = Nanobus.prototype.addListener = function (eventName, listener) {\n    assert.ok(typeof eventName === 'string' || typeof eventName === 'symbol', 'nanobus.on: eventName should be type string or symbol');\n    assert.equal(typeof listener, 'function', 'nanobus.on: listener should be type function');\n    if (eventName === '*') {\n        this._starListeners.push(listener);\n    }\n    else {\n        if (!this._listeners[eventName])\n            this._listeners[eventName] = [];\n        this._listeners[eventName].push(listener);\n    }\n    return this;\n};\nNanobus.prototype.prependListener = function (eventName, listener) {\n    assert.ok(typeof eventName === 'string' || typeof eventName === 'symbol', 'nanobus.prependListener: eventName should be type string or symbol');\n    assert.equal(typeof listener, 'function', 'nanobus.prependListener: listener should be type function');\n    if (eventName === '*') {\n        this._starListeners.unshift(listener);\n    }\n    else {\n        if (!this._listeners[eventName])\n            this._listeners[eventName] = [];\n        this._listeners[eventName].unshift(listener);\n    }\n    return this;\n};\nNanobus.prototype.once = function (eventName, listener) {\n    assert.ok(typeof eventName === 'string' || typeof eventName === 'symbol', 'nanobus.once: eventName should be type string or symbol');\n    assert.equal(typeof listener, 'function', 'nanobus.once: listener should be type function');\n    var self = this;\n    this.on(eventName, once);\n    function once() {\n        listener.apply(self, arguments);\n        self.removeListener(eventName, once);\n    }\n    return this;\n};\nNanobus.prototype.prependOnceListener = function (eventName, listener) {\n    assert.ok(typeof eventName === 'string' || typeof eventName === 'symbol', 'nanobus.prependOnceListener: eventName should be type string or symbol');\n    assert.equal(typeof listener, 'function', 'nanobus.prependOnceListener: listener should be type function');\n    var self = this;\n    this.prependListener(eventName, once);\n    function once() {\n        listener.apply(self, arguments);\n        self.removeListener(eventName, once);\n    }\n    return this;\n};\nNanobus.prototype.removeListener = function (eventName, listener) {\n    assert.ok(typeof eventName === 'string' || typeof eventName === 'symbol', 'nanobus.removeListener: eventName should be type string or symbol');\n    assert.equal(typeof listener, 'function', 'nanobus.removeListener: listener should be type function');\n    if (eventName === '*') {\n        this._starListeners = this._starListeners.slice();\n        return remove(this._starListeners, listener);\n    }\n    else {\n        if (typeof this._listeners[eventName] !== 'undefined') {\n            this._listeners[eventName] = this._listeners[eventName].slice();\n        }\n        return remove(this._listeners[eventName], listener);\n    }\n    function remove(arr, listener) {\n        if (!arr)\n            return;\n        var index = arr.indexOf(listener);\n        if (index !== -1) {\n            splice(arr, index, 1);\n            return true;\n        }\n    }\n};\nNanobus.prototype.removeAllListeners = function (eventName) {\n    if (eventName) {\n        if (eventName === '*') {\n            this._starListeners = [];\n        }\n        else {\n            this._listeners[eventName] = [];\n        }\n    }\n    else {\n        this._starListeners = [];\n        this._listeners = {};\n    }\n    return this;\n};\nNanobus.prototype.listeners = function (eventName) {\n    var listeners = eventName !== '*'\n        ? this._listeners[eventName]\n        : this._starListeners;\n    var ret = [];\n    if (listeners) {\n        var ilength = listeners.length;\n        for (var i = 0; i < ilength; i++)\n            ret.push(listeners[i]);\n    }\n    return ret;\n};\nNanobus.prototype._emit = function (arr, eventName, data, uuid) {\n    if (typeof arr === 'undefined')\n        return;\n    if (arr.length === 0)\n        return;\n    if (data === undefined) {\n        data = eventName;\n        eventName = null;\n    }\n    if (eventName) {\n        if (uuid !== undefined) {\n            data = [eventName].concat(data, uuid);\n        }\n        else {\n            data = [eventName].concat(data);\n        }\n    }\n    var length = arr.length;\n    for (var i = 0; i < length; i++) {\n        var listener = arr[i];\n        listener.apply(listener, data);\n    }\n};\n","var assert = require('assert');\nvar hasWindow = typeof window !== 'undefined';\nfunction createScheduler() {\n    var scheduler;\n    if (hasWindow) {\n        if (!window._nanoScheduler)\n            window._nanoScheduler = new NanoScheduler(true);\n        scheduler = window._nanoScheduler;\n    }\n    else {\n        scheduler = new NanoScheduler();\n    }\n    return scheduler;\n}\nfunction NanoScheduler(hasWindow) {\n    this.hasWindow = hasWindow;\n    this.hasIdle = this.hasWindow && window.requestIdleCallback;\n    this.method = this.hasIdle ? window.requestIdleCallback.bind(window) : this.setTimeout;\n    this.scheduled = false;\n    this.queue = [];\n}\nNanoScheduler.prototype.push = function (cb) {\n    assert.equal(typeof cb, 'function', 'nanoscheduler.push: cb should be type function');\n    this.queue.push(cb);\n    this.schedule();\n};\nNanoScheduler.prototype.schedule = function () {\n    if (this.scheduled)\n        return;\n    this.scheduled = true;\n    var self = this;\n    this.method(function (idleDeadline) {\n        var cb;\n        while (self.queue.length && idleDeadline.timeRemaining() > 0) {\n            cb = self.queue.shift();\n            cb(idleDeadline);\n        }\n        self.scheduled = false;\n        if (self.queue.length)\n            self.schedule();\n    });\n};\nNanoScheduler.prototype.setTimeout = function (cb) {\n    setTimeout(cb, 0, {\n        timeRemaining: function () {\n            return 1;\n        }\n    });\n};\nmodule.exports = createScheduler;\n","var scheduler = require('nanoscheduler')();\nvar assert = require('assert');\nvar perf;\nnanotiming.disabled = true;\ntry {\n    perf = window.performance;\n    nanotiming.disabled = window.localStorage.DISABLE_NANOTIMING === 'true' || !perf.mark;\n}\ncatch (e) { }\nmodule.exports = nanotiming;\nfunction nanotiming(name) {\n    assert.equal(typeof name, 'string', 'nanotiming: name should be type string');\n    if (nanotiming.disabled)\n        return noop;\n    var uuid = (perf.now() * 10000).toFixed() % Number.MAX_SAFE_INTEGER;\n    var startName = 'start-' + uuid + '-' + name;\n    perf.mark(startName);\n    function end(cb) {\n        var endName = 'end-' + uuid + '-' + name;\n        perf.mark(endName);\n        scheduler.push(function () {\n            var err = null;\n            try {\n                var measureName = name + ' [' + uuid + ']';\n                perf.measure(measureName, startName, endName);\n                perf.clearMarks(startName);\n                perf.clearMarks(endName);\n            }\n            catch (e) {\n                err = e;\n            }\n            if (cb)\n                cb(err, name);\n        });\n    }\n    end.uuid = uuid;\n    return end;\n}\nfunction noop(cb) {\n    if (cb) {\n        scheduler.push(function () {\n            cb(new Error('nanotiming: performance API unavailable'));\n        });\n    }\n}\n","'use strict';\n/**\n * Remove a range of items from an array\n *\n * @function removeItems\n * @param {Array<*>} arr The target array\n * @param {number} startIdx The index to begin removing from (inclusive)\n * @param {number} removeCount How many items to remove\n */\nmodule.exports = function removeItems(arr, startIdx, removeCount) {\n    var i, length = arr.length;\n    if (startIdx >= length || removeCount === 0) {\n        return;\n    }\n    removeCount = (startIdx + removeCount > length ? length - startIdx : removeCount);\n    var len = length - removeCount;\n    for (i = startIdx; i < len; ++i) {\n        arr[i] = arr[i + removeCount];\n    }\n    arr.length = len;\n};\n"],"sourceRoot":""}